{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\kotlab\\\\Documents\\\\GitHub\\\\MarketMind\\\\frontend\\\\src\\\\components\\\\SearchPage.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useMemo } from 'react';\nimport { SearchIcon, TrendingUpIcon, TrendingDownIcon } from './Icons';\nimport StockChart from './charts/StockChart';\nimport StockDataCard from './ui/StockDataCard';\nimport { Line, Chart } from 'react-chartjs-2';\nimport { Chart as ChartJS, CategoryScale, LinearScale, PointElement, LineElement, Title, Tooltip, Legend, TimeScale, Filler // Filler is needed for gradient backgrounds\n} from 'chart.js';\nimport { CandlestickController, CandlestickElement } from 'chartjs-chart-financial';\nimport 'chartjs-adapter-date-fns';\n\n// Register all necessary components for Chart.js\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nChartJS.register(CategoryScale, LinearScale, PointElement, LineElement, Title, Tooltip, Legend, TimeScale, Filler,\n// Register Filler plugin\nCandlestickController, CandlestickElement);\nconst timeFrames = [{\n  label: '1D',\n  value: '1d'\n}, {\n  label: '5D',\n  value: '5d'\n}, {\n  label: '1M',\n  value: '1mo'\n}, {\n  label: '6M',\n  value: '6mo'\n}, {\n  label: '1Y',\n  value: '1y'\n}];\n/* OLD CHART\nconst StockChart = ({ chartData, ticker, onTimeFrameChange, activeTimeFrame }) => {\n    const [chartType, setChartType] = useState('line');\n\n    const chartConfig = useMemo(() => {\n        if (!chartData || chartData.length === 0) return null;\n\n        const labels = chartData.map(d => new Date(d.date));\n\n        const options = {\n            responsive: true,\n            maintainAspectRatio: false,\n            plugins: {\n                legend: { display: false },\n                title: {\n                    display: true,\n                    text: `${ticker} Price History (${activeTimeFrame.label})`,\n                    font: { size: 18 },\n                    padding: { top: 10, bottom: 20 }\n                },\n            },\n            scales: {\n                x: {\n                    type: 'time',\n                    time: {\n                        unit: activeTimeFrame.value === '1d' ? 'hour' : 'day',\n                        tooltipFormat: 'MMM dd, yyyy HH:mm',\n                    },\n                    grid: { display: false }\n                },\n                y: {\n                     grid: { color: 'rgba(200, 200, 200, 0.1)' }\n                }\n            },\n            interaction: {\n                intersect: false,\n                mode: 'index',\n            },\n            elements: {\n                point: {\n                    radius: 0 // Hide points on the line\n                }\n            }\n        };\n\n        let data;\n        let ChartComponent = Line;\n\n        if (chartType === 'line') {\n            data = {\n                labels,\n                datasets: [{\n                    label: 'Price',\n                    data: chartData.map(d => d.close),\n                    fill: 'start',\n                    // Logic for gradient background color\n                    backgroundColor: (context) => {\n                        const ctx = context.chart.ctx;\n                        const gradient = ctx.createLinearGradient(0, 0, 0, 400);\n                        const lastPrice = chartData[chartData.length - 1].close;\n                        const firstPrice = chartData[0].close;\n                        const isUp = lastPrice >= firstPrice;\n                        gradient.addColorStop(0, isUp ? 'rgba(16, 185, 129, 0.4)' : 'rgba(239, 68, 68, 0.4)');\n                        gradient.addColorStop(1, 'rgba(0, 0, 0, 0)');\n                        return gradient;\n                    },\n                     // Logic for segmented line color (red/green)\n                    segment: {\n                        borderColor: (ctx) => {\n                            const y1 = ctx.p0.parsed.y;\n                            const y2 = ctx.p1.parsed.y;\n                            return y2 >= y1 ? '#10B981' : '#EF4444';\n                        }\n                    },\n                    borderWidth: 2,\n                }]\n            };\n        } else { // Candlestick\n             data = {\n                datasets: [{\n                    label: `${ticker} OHLC`,\n                    data: chartData.map(d => ({\n                        x: new Date(d.date).valueOf(),\n                        o: d.open,\n                        h: d.high,\n                        l: d.low,\n                        c: d.close\n                    }))\n                }]\n            };\n            ChartComponent = Chart; // Use the generic Chart component for custom types\n        }\n\n        return { type: chartType, options, data, ChartComponent };\n\n    }, [chartData, chartType, ticker, activeTimeFrame]);\n\n    if (!chartConfig) return null;\n    const { type, options, data, ChartComponent } = chartConfig;\n\n    return (\n        <div className=\"mt-8 bg-white p-4 sm:p-6 rounded-xl shadow-lg animate-fade-in\">\n            <div className=\"flex flex-col sm:flex-row justify-between items-center mb-4 gap-4\">\n                 <div className=\"flex items-center space-x-1 bg-gray-100 p-1 rounded-lg\">\n                    {timeFrames.map((frame) => (\n                        <button\n                            key={frame.value}\n                            onClick={() => onTimeFrameChange(frame)}\n                            className={`px-3 py-1 text-sm font-semibold rounded-md transition-colors duration-200 ${\n                                activeTimeFrame.value === frame.value\n                                ? 'bg-blue-600 text-white shadow'\n                                : 'text-gray-600 hover:bg-gray-200'\n                            }`}\n                        >\n                            {frame.label}\n                        </button>\n                    ))}\n                </div>\n                <select\n                    value={chartType}\n                    onChange={(e) => setChartType(e.target.value)}\n                    className=\"p-2 border rounded-lg bg-gray-50 focus:ring-2 focus:ring-blue-500 outline-none text-sm\"\n                >\n                    <option value=\"line\">Line Chart</option>\n                    <option value=\"candlestick\">Candlestick</option>\n                </select>\n            </div>\n            <div className=\"h-96\">\n                <ChartComponent type={type} options={options} data={data} />\n            </div>\n        </div>\n    );\n};\n\n\nconst StockDataCard = ({ data, onAddToWatchlist }) => {\n    const isPositive = data.change >= 0;\n    const changeColor = isPositive ? 'text-green-500' : 'text-red-500';\n\n    const DataRow = ({ label, value }) => (\n        <div className=\"flex justify-between py-3 border-b border-gray-200 last:border-b-0\">\n            <span className=\"text-sm text-gray-500\">{label}</span>\n            <span className=\"text-sm font-medium text-gray-800\">{String(value)}</span>\n        </div>\n    );\n\n    return (\n        <div className=\"mt-8 bg-white p-6 rounded-xl shadow-lg animate-fade-in\">\n            <div className=\"flex justify-between items-start\">\n                <div>\n                    <h2 className=\"text-2xl font-bold text-gray-900\">{data.companyName} ({data.symbol})</h2>\n                    <p className=\"text-3xl font-bold text-gray-800 mt-2\">${data.price.toFixed(2)}</p>\n                </div>\n                <div className=\"text-right\">\n                    <div className={`flex items-center justify-end text-lg font-semibold ${changeColor}`}>\n                         {isPositive ? <TrendingUpIcon className=\"h-6 w-6 mr-1\" /> : <TrendingDownIcon className=\"h-6 w-6 mr-1\" />}\n                        <span>{data.change.toFixed(2)} ({data.changePercent.toFixed(2)}%)</span>\n                    </div>\n                    <button\n                        onClick={() => onAddToWatchlist(data.symbol)}\n                        className=\"mt-4 bg-blue-500 text-white font-semibold py-2 px-4 rounded-lg hover:bg-blue-600 transition-colors\"\n                    >\n                        + Add to Watchlist\n                    </button>\n                </div>\n            </div>\n            <div className=\"mt-6\">\n                <DataRow label=\"Market Cap\" value={data.marketCap} />\n                <DataRow label=\"P/E Ratio\" value={data.peRatio} />\n                <DataRow label=\"52 Week High\" value={`$${data.week52High.toFixed(2)}`} />\n                <DataRow label=\"52 Week Low\" value={`$${data.week52Low.toFixed(2)}`} />\n            </div>\n        </div>\n    );\n};\n*/\nconst SearchPage = () => {\n  _s();\n  const [ticker, setTicker] = useState('');\n  const [searchedTicker, setSearchedTicker] = useState('');\n  const [stockData, setStockData] = useState(null);\n  const [chartData, setChartData] = useState(null);\n  const [activeTimeFrame, setActiveTimeFrame] = useState(timeFrames.find(f => f.value === '6mo'));\n  const [loading, setLoading] = useState(false);\n  const [chartLoading, setChartLoading] = useState(false);\n  const [error, setError] = useState('');\n  const fetchChartData = async (symbol, timeFrame) => {\n    setChartLoading(true);\n    setError('');\n    try {\n      const chartResponse = await fetch(`http://127.0.0.1:5001/chart/${symbol}?period=${timeFrame.value}`);\n      if (!chartResponse.ok) {\n        const errorData = await chartResponse.json();\n        throw new Error(errorData.error || 'Chart data not found');\n      }\n      const chartJson = await chartResponse.json();\n      setChartData(chartJson);\n    } catch (err) {\n      setError(err.message);\n      setChartData(null);\n    } finally {\n      setChartLoading(false);\n    }\n  };\n  const handleSearch = async e => {\n    e.preventDefault();\n    if (!ticker) return;\n    setLoading(true);\n    setStockData(null);\n    setChartData(null);\n    setError('');\n    const defaultTimeFrame = timeFrames.find(f => f.value === '6mo');\n    setActiveTimeFrame(defaultTimeFrame);\n    try {\n      const stockResponse = await fetch(`http://127.0.0.1:5001/stock/${ticker}`);\n      if (!stockResponse.ok) {\n        const errorData = await stockResponse.json();\n        throw new Error(errorData.error || 'Stock data not found');\n      }\n      const stockJson = await stockResponse.json();\n      setStockData(stockJson);\n      setSearchedTicker(ticker);\n      await fetchChartData(ticker, defaultTimeFrame);\n    } catch (err) {\n      setError(err.message || 'An error occurred. Try \"AAPL\", \"GOOGL\", or \"TSLA\".');\n      setSearchedTicker('');\n    } finally {\n      setLoading(false);\n    }\n  };\n  const handleTimeFrameChange = timeFrame => {\n    setActiveTimeFrame(timeFrame);\n    if (searchedTicker) {\n      fetchChartData(searchedTicker, timeFrame);\n    }\n  };\n  const handleAddToWatchlist = async tickerToAdd => {\n    try {\n      const response = await fetch(`http://127.0.0.1:5001/watchlist/${tickerToAdd}`, {\n        method: 'POST'\n      });\n      const result = await response.json();\n      // You can use a more sophisticated notification system later\n      alert(result.message);\n    } catch (err) {\n      alert('Failed to add stock to watchlist. Is the server running?');\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"container mx-auto px-4 py-16 flex flex-col items-center\",\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"w-full max-w-2xl text-center\",\n      children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n        className: \"text-5xl font-extrabold text-gray-800\",\n        children: \"Stock Ticker Search\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 303,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        className: \"text-lg text-gray-500 mt-3\",\n        children: \"Enter a stock symbol to get the latest data.\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 304,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"form\", {\n        onSubmit: handleSearch,\n        className: \"mt-8 flex relative\",\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"absolute left-4 top-1/2 transform -translate-y-1/2\",\n          children: /*#__PURE__*/_jsxDEV(SearchIcon, {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 307,\n            columnNumber: 25\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 306,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"text\",\n          value: ticker,\n          onChange: e => setTicker(e.target.value.toUpperCase()),\n          placeholder: \"e.g., AAPL\",\n          className: \"w-full pl-12 pr-4 py-4 text-lg border-2 border-gray-200 rounded-l-lg focus:ring-2 focus:ring-blue-500 focus:border-blue-500 outline-none transition-shadow\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 309,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          type: \"submit\",\n          disabled: loading,\n          className: \"bg-blue-600 text-white font-bold px-8 py-4 rounded-r-lg hover:bg-blue-700 focus:outline-none focus:ring-2 focus:ring-blue-500 focus:ring-opacity-50 transition-colors disabled:bg-blue-300\",\n          children: loading ? '...' : 'Search'\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 316,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 305,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 302,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"w-full max-w-4xl mt-4\",\n      children: [error && !chartLoading && /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"text-red-500 text-center p-4 bg-red-100 rounded-lg\",\n        children: error\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 326,\n        columnNumber: 44\n      }, this), stockData && /*#__PURE__*/_jsxDEV(StockDataCard, {\n        data: stockData,\n        onAddToWatchlist: handleAddToWatchlist\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 327,\n        columnNumber: 31\n      }, this), chartLoading && /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"text-center p-8 text-gray-500\",\n        children: \"Loading chart...\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 328,\n        columnNumber: 34\n      }, this), chartData && !chartLoading && /*#__PURE__*/_jsxDEV(StockChart, {\n        chartData: chartData,\n        ticker: searchedTicker,\n        onTimeFrameChange: handleTimeFrameChange,\n        activeTimeFrame: activeTimeFrame\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 330,\n        columnNumber: 21\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 325,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 301,\n    columnNumber: 9\n  }, this);\n};\n_s(SearchPage, \"whA0WtoIJaQK26IAUFbG+MhrLds=\");\n_c = SearchPage;\nexport default SearchPage;\nvar _c;\n$RefreshReg$(_c, \"SearchPage\");","map":{"version":3,"names":["React","useState","useMemo","SearchIcon","TrendingUpIcon","TrendingDownIcon","StockChart","StockDataCard","Line","Chart","ChartJS","CategoryScale","LinearScale","PointElement","LineElement","Title","Tooltip","Legend","TimeScale","Filler","CandlestickController","CandlestickElement","jsxDEV","_jsxDEV","register","timeFrames","label","value","SearchPage","_s","ticker","setTicker","searchedTicker","setSearchedTicker","stockData","setStockData","chartData","setChartData","activeTimeFrame","setActiveTimeFrame","find","f","loading","setLoading","chartLoading","setChartLoading","error","setError","fetchChartData","symbol","timeFrame","chartResponse","fetch","ok","errorData","json","Error","chartJson","err","message","handleSearch","e","preventDefault","defaultTimeFrame","stockResponse","stockJson","handleTimeFrameChange","handleAddToWatchlist","tickerToAdd","response","method","result","alert","className","children","fileName","_jsxFileName","lineNumber","columnNumber","onSubmit","type","onChange","target","toUpperCase","placeholder","disabled","data","onAddToWatchlist","onTimeFrameChange","_c","$RefreshReg$"],"sources":["C:/Users/kotlab/Documents/GitHub/MarketMind/frontend/src/components/SearchPage.js"],"sourcesContent":["import React, { useState, useMemo } from 'react';\nimport { SearchIcon, TrendingUpIcon, TrendingDownIcon } from './Icons';\nimport StockChart from './charts/StockChart';\nimport StockDataCard from './ui/StockDataCard';\nimport { Line, Chart } from 'react-chartjs-2';\nimport {\n  Chart as ChartJS,\n  CategoryScale,\n  LinearScale,\n  PointElement,\n  LineElement,\n  Title,\n  Tooltip,\n  Legend,\n  TimeScale,\n  Filler, // Filler is needed for gradient backgrounds\n} from 'chart.js';\nimport { CandlestickController, CandlestickElement } from 'chartjs-chart-financial';\nimport 'chartjs-adapter-date-fns';\n\n// Register all necessary components for Chart.js\nChartJS.register(\n  CategoryScale,\n  LinearScale,\n  PointElement,\n  LineElement,\n  Title,\n  Tooltip,\n  Legend,\n  TimeScale,\n  Filler, // Register Filler plugin\n  CandlestickController,\n  CandlestickElement\n);\n\nconst timeFrames = [\n    { label: '1D', value: '1d' },\n    { label: '5D', value: '5d' },\n    { label: '1M', value: '1mo' },\n    { label: '6M', value: '6mo' },\n    { label: '1Y', value: '1y' },\n];\n/* OLD CHART\nconst StockChart = ({ chartData, ticker, onTimeFrameChange, activeTimeFrame }) => {\n    const [chartType, setChartType] = useState('line');\n\n    const chartConfig = useMemo(() => {\n        if (!chartData || chartData.length === 0) return null;\n\n        const labels = chartData.map(d => new Date(d.date));\n\n        const options = {\n            responsive: true,\n            maintainAspectRatio: false,\n            plugins: {\n                legend: { display: false },\n                title: {\n                    display: true,\n                    text: `${ticker} Price History (${activeTimeFrame.label})`,\n                    font: { size: 18 },\n                    padding: { top: 10, bottom: 20 }\n                },\n            },\n            scales: {\n                x: {\n                    type: 'time',\n                    time: {\n                        unit: activeTimeFrame.value === '1d' ? 'hour' : 'day',\n                        tooltipFormat: 'MMM dd, yyyy HH:mm',\n                    },\n                    grid: { display: false }\n                },\n                y: {\n                     grid: { color: 'rgba(200, 200, 200, 0.1)' }\n                }\n            },\n            interaction: {\n                intersect: false,\n                mode: 'index',\n            },\n            elements: {\n                point: {\n                    radius: 0 // Hide points on the line\n                }\n            }\n        };\n\n        let data;\n        let ChartComponent = Line;\n\n        if (chartType === 'line') {\n            data = {\n                labels,\n                datasets: [{\n                    label: 'Price',\n                    data: chartData.map(d => d.close),\n                    fill: 'start',\n                    // Logic for gradient background color\n                    backgroundColor: (context) => {\n                        const ctx = context.chart.ctx;\n                        const gradient = ctx.createLinearGradient(0, 0, 0, 400);\n                        const lastPrice = chartData[chartData.length - 1].close;\n                        const firstPrice = chartData[0].close;\n                        const isUp = lastPrice >= firstPrice;\n                        gradient.addColorStop(0, isUp ? 'rgba(16, 185, 129, 0.4)' : 'rgba(239, 68, 68, 0.4)');\n                        gradient.addColorStop(1, 'rgba(0, 0, 0, 0)');\n                        return gradient;\n                    },\n                     // Logic for segmented line color (red/green)\n                    segment: {\n                        borderColor: (ctx) => {\n                            const y1 = ctx.p0.parsed.y;\n                            const y2 = ctx.p1.parsed.y;\n                            return y2 >= y1 ? '#10B981' : '#EF4444';\n                        }\n                    },\n                    borderWidth: 2,\n                }]\n            };\n        } else { // Candlestick\n             data = {\n                datasets: [{\n                    label: `${ticker} OHLC`,\n                    data: chartData.map(d => ({\n                        x: new Date(d.date).valueOf(),\n                        o: d.open,\n                        h: d.high,\n                        l: d.low,\n                        c: d.close\n                    }))\n                }]\n            };\n            ChartComponent = Chart; // Use the generic Chart component for custom types\n        }\n\n        return { type: chartType, options, data, ChartComponent };\n\n    }, [chartData, chartType, ticker, activeTimeFrame]);\n\n    if (!chartConfig) return null;\n    const { type, options, data, ChartComponent } = chartConfig;\n\n    return (\n        <div className=\"mt-8 bg-white p-4 sm:p-6 rounded-xl shadow-lg animate-fade-in\">\n            <div className=\"flex flex-col sm:flex-row justify-between items-center mb-4 gap-4\">\n                 <div className=\"flex items-center space-x-1 bg-gray-100 p-1 rounded-lg\">\n                    {timeFrames.map((frame) => (\n                        <button\n                            key={frame.value}\n                            onClick={() => onTimeFrameChange(frame)}\n                            className={`px-3 py-1 text-sm font-semibold rounded-md transition-colors duration-200 ${\n                                activeTimeFrame.value === frame.value\n                                ? 'bg-blue-600 text-white shadow'\n                                : 'text-gray-600 hover:bg-gray-200'\n                            }`}\n                        >\n                            {frame.label}\n                        </button>\n                    ))}\n                </div>\n                <select\n                    value={chartType}\n                    onChange={(e) => setChartType(e.target.value)}\n                    className=\"p-2 border rounded-lg bg-gray-50 focus:ring-2 focus:ring-blue-500 outline-none text-sm\"\n                >\n                    <option value=\"line\">Line Chart</option>\n                    <option value=\"candlestick\">Candlestick</option>\n                </select>\n            </div>\n            <div className=\"h-96\">\n                <ChartComponent type={type} options={options} data={data} />\n            </div>\n        </div>\n    );\n};\n\n\nconst StockDataCard = ({ data, onAddToWatchlist }) => {\n    const isPositive = data.change >= 0;\n    const changeColor = isPositive ? 'text-green-500' : 'text-red-500';\n\n    const DataRow = ({ label, value }) => (\n        <div className=\"flex justify-between py-3 border-b border-gray-200 last:border-b-0\">\n            <span className=\"text-sm text-gray-500\">{label}</span>\n            <span className=\"text-sm font-medium text-gray-800\">{String(value)}</span>\n        </div>\n    );\n\n    return (\n        <div className=\"mt-8 bg-white p-6 rounded-xl shadow-lg animate-fade-in\">\n            <div className=\"flex justify-between items-start\">\n                <div>\n                    <h2 className=\"text-2xl font-bold text-gray-900\">{data.companyName} ({data.symbol})</h2>\n                    <p className=\"text-3xl font-bold text-gray-800 mt-2\">${data.price.toFixed(2)}</p>\n                </div>\n                <div className=\"text-right\">\n                    <div className={`flex items-center justify-end text-lg font-semibold ${changeColor}`}>\n                         {isPositive ? <TrendingUpIcon className=\"h-6 w-6 mr-1\" /> : <TrendingDownIcon className=\"h-6 w-6 mr-1\" />}\n                        <span>{data.change.toFixed(2)} ({data.changePercent.toFixed(2)}%)</span>\n                    </div>\n                    <button\n                        onClick={() => onAddToWatchlist(data.symbol)}\n                        className=\"mt-4 bg-blue-500 text-white font-semibold py-2 px-4 rounded-lg hover:bg-blue-600 transition-colors\"\n                    >\n                        + Add to Watchlist\n                    </button>\n                </div>\n            </div>\n            <div className=\"mt-6\">\n                <DataRow label=\"Market Cap\" value={data.marketCap} />\n                <DataRow label=\"P/E Ratio\" value={data.peRatio} />\n                <DataRow label=\"52 Week High\" value={`$${data.week52High.toFixed(2)}`} />\n                <DataRow label=\"52 Week Low\" value={`$${data.week52Low.toFixed(2)}`} />\n            </div>\n        </div>\n    );\n};\n*/\nconst SearchPage = () => {\n    const [ticker, setTicker] = useState('');\n    const [searchedTicker, setSearchedTicker] = useState('');\n    const [stockData, setStockData] = useState(null);\n    const [chartData, setChartData] = useState(null);\n    const [activeTimeFrame, setActiveTimeFrame] = useState(timeFrames.find(f => f.value === '6mo'));\n    const [loading, setLoading] = useState(false);\n    const [chartLoading, setChartLoading] = useState(false);\n    const [error, setError] = useState('');\n\n    const fetchChartData = async (symbol, timeFrame) => {\n        setChartLoading(true);\n        setError('');\n        try {\n            const chartResponse = await fetch(`http://127.0.0.1:5001/chart/${symbol}?period=${timeFrame.value}`);\n            if (!chartResponse.ok) {\n                const errorData = await chartResponse.json();\n                throw new Error(errorData.error || 'Chart data not found');\n            }\n            const chartJson = await chartResponse.json();\n            setChartData(chartJson);\n        } catch (err) {\n            setError(err.message);\n            setChartData(null);\n        } finally {\n            setChartLoading(false);\n        }\n    };\n\n    const handleSearch = async (e) => {\n        e.preventDefault();\n        if (!ticker) return;\n\n        setLoading(true);\n        setStockData(null);\n        setChartData(null);\n        setError('');\n\n        const defaultTimeFrame = timeFrames.find(f => f.value === '6mo');\n        setActiveTimeFrame(defaultTimeFrame);\n\n        try {\n            const stockResponse = await fetch(`http://127.0.0.1:5001/stock/${ticker}`);\n            if (!stockResponse.ok) {\n                const errorData = await stockResponse.json();\n                throw new Error(errorData.error || 'Stock data not found');\n            }\n            const stockJson = await stockResponse.json();\n            setStockData(stockJson);\n            setSearchedTicker(ticker);\n\n            await fetchChartData(ticker, defaultTimeFrame);\n\n        } catch (err) {\n            setError(err.message || 'An error occurred. Try \"AAPL\", \"GOOGL\", or \"TSLA\".');\n            setSearchedTicker('');\n        } finally {\n            setLoading(false);\n        }\n    };\n\n    const handleTimeFrameChange = (timeFrame) => {\n        setActiveTimeFrame(timeFrame);\n        if (searchedTicker) {\n            fetchChartData(searchedTicker, timeFrame);\n        }\n    };\n\n    const handleAddToWatchlist = async (tickerToAdd) => {\n        try {\n            const response = await fetch(`http://127.0.0.1:5001/watchlist/${tickerToAdd}`, {\n                method: 'POST',\n            });\n            const result = await response.json();\n             // You can use a more sophisticated notification system later\n            alert(result.message);\n        } catch (err) {\n            alert('Failed to add stock to watchlist. Is the server running?');\n        }\n    };\n\n    return (\n        <div className=\"container mx-auto px-4 py-16 flex flex-col items-center\">\n            <div className=\"w-full max-w-2xl text-center\">\n                <h1 className=\"text-5xl font-extrabold text-gray-800\">Stock Ticker Search</h1>\n                <p className=\"text-lg text-gray-500 mt-3\">Enter a stock symbol to get the latest data.</p>\n                <form onSubmit={handleSearch} className=\"mt-8 flex relative\">\n                    <div className=\"absolute left-4 top-1/2 transform -translate-y-1/2\">\n                        <SearchIcon />\n                    </div>\n                    <input\n                        type=\"text\"\n                        value={ticker}\n                        onChange={(e) => setTicker(e.target.value.toUpperCase())}\n                        placeholder=\"e.g., AAPL\"\n                        className=\"w-full pl-12 pr-4 py-4 text-lg border-2 border-gray-200 rounded-l-lg focus:ring-2 focus:ring-blue-500 focus:border-blue-500 outline-none transition-shadow\"\n                    />\n                    <button\n                        type=\"submit\"\n                        disabled={loading}\n                        className=\"bg-blue-600 text-white font-bold px-8 py-4 rounded-r-lg hover:bg-blue-700 focus:outline-none focus:ring-2 focus:ring-blue-500 focus:ring-opacity-50 transition-colors disabled:bg-blue-300\"\n                    >\n                        {loading ? '...' : 'Search'}\n                    </button>\n                </form>\n            </div>\n            <div className=\"w-full max-w-4xl mt-4\">\n                {error && !chartLoading && <div className=\"text-red-500 text-center p-4 bg-red-100 rounded-lg\">{error}</div>}\n                {stockData && <StockDataCard data={stockData} onAddToWatchlist={handleAddToWatchlist} />}\n                {chartLoading && <div className=\"text-center p-8 text-gray-500\">Loading chart...</div>}\n                {chartData && !chartLoading && (\n                    <StockChart\n                        chartData={chartData}\n                        ticker={searchedTicker}\n                        onTimeFrameChange={handleTimeFrameChange}\n                        activeTimeFrame={activeTimeFrame}\n                    />\n                )}\n            </div>\n        </div>\n    );\n};\n\nexport default SearchPage;\n\n"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,QAAQ,EAAEC,OAAO,QAAQ,OAAO;AAChD,SAASC,UAAU,EAAEC,cAAc,EAAEC,gBAAgB,QAAQ,SAAS;AACtE,OAAOC,UAAU,MAAM,qBAAqB;AAC5C,OAAOC,aAAa,MAAM,oBAAoB;AAC9C,SAASC,IAAI,EAAEC,KAAK,QAAQ,iBAAiB;AAC7C,SACEA,KAAK,IAAIC,OAAO,EAChBC,aAAa,EACbC,WAAW,EACXC,YAAY,EACZC,WAAW,EACXC,KAAK,EACLC,OAAO,EACPC,MAAM,EACNC,SAAS,EACTC,MAAM,CAAE;AAAA,OACH,UAAU;AACjB,SAASC,qBAAqB,EAAEC,kBAAkB,QAAQ,yBAAyB;AACnF,OAAO,0BAA0B;;AAEjC;AAAA,SAAAC,MAAA,IAAAC,OAAA;AACAb,OAAO,CAACc,QAAQ,CACdb,aAAa,EACbC,WAAW,EACXC,YAAY,EACZC,WAAW,EACXC,KAAK,EACLC,OAAO,EACPC,MAAM,EACNC,SAAS,EACTC,MAAM;AAAE;AACRC,qBAAqB,EACrBC,kBACF,CAAC;AAED,MAAMI,UAAU,GAAG,CACf;EAAEC,KAAK,EAAE,IAAI;EAAEC,KAAK,EAAE;AAAK,CAAC,EAC5B;EAAED,KAAK,EAAE,IAAI;EAAEC,KAAK,EAAE;AAAK,CAAC,EAC5B;EAAED,KAAK,EAAE,IAAI;EAAEC,KAAK,EAAE;AAAM,CAAC,EAC7B;EAAED,KAAK,EAAE,IAAI;EAAEC,KAAK,EAAE;AAAM,CAAC,EAC7B;EAAED,KAAK,EAAE,IAAI;EAAEC,KAAK,EAAE;AAAK,CAAC,CAC/B;AACD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,MAAMC,UAAU,GAAGA,CAAA,KAAM;EAAAC,EAAA;EACrB,MAAM,CAACC,MAAM,EAAEC,SAAS,CAAC,GAAG9B,QAAQ,CAAC,EAAE,CAAC;EACxC,MAAM,CAAC+B,cAAc,EAAEC,iBAAiB,CAAC,GAAGhC,QAAQ,CAAC,EAAE,CAAC;EACxD,MAAM,CAACiC,SAAS,EAAEC,YAAY,CAAC,GAAGlC,QAAQ,CAAC,IAAI,CAAC;EAChD,MAAM,CAACmC,SAAS,EAAEC,YAAY,CAAC,GAAGpC,QAAQ,CAAC,IAAI,CAAC;EAChD,MAAM,CAACqC,eAAe,EAAEC,kBAAkB,CAAC,GAAGtC,QAAQ,CAACwB,UAAU,CAACe,IAAI,CAACC,CAAC,IAAIA,CAAC,CAACd,KAAK,KAAK,KAAK,CAAC,CAAC;EAC/F,MAAM,CAACe,OAAO,EAAEC,UAAU,CAAC,GAAG1C,QAAQ,CAAC,KAAK,CAAC;EAC7C,MAAM,CAAC2C,YAAY,EAAEC,eAAe,CAAC,GAAG5C,QAAQ,CAAC,KAAK,CAAC;EACvD,MAAM,CAAC6C,KAAK,EAAEC,QAAQ,CAAC,GAAG9C,QAAQ,CAAC,EAAE,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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}